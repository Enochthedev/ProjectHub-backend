/* Accessibility and Screen Reader Utilities */

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Screen reader only content that becomes visible on focus */
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  padding: inherit;
  margin: inherit;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* Skip links for keyboard navigation */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: #000;
  color: #fff;
  padding: 8px;
  text-decoration: none;
  z-index: 1000;
  border-radius: 0 0 4px 4px;
}

.skip-link:focus {
  top: 0;
}

/* Focus indicators */
.focus-visible {
  outline: 2px solid #000;
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .high-contrast-border {
    border: 2px solid !important;
  }

  .high-contrast-text {
    color: ButtonText !important;
    background-color: ButtonFace !important;
  }

  .high-contrast-button {
    border: 2px solid ButtonText !important;
    background-color: ButtonFace !important;
    color: ButtonText !important;
  }

  .high-contrast-button:hover,
  .high-contrast-button:focus {
    background-color: Highlight !important;
    color: HighlightText !important;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .reduce-motion {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Touch-friendly sizing */
.touch-target {
  min-height: 44px;
  min-width: 44px;
}

.touch-target-sm {
  min-height: 36px;
  min-width: 36px;
}

.touch-target-lg {
  min-height: 48px;
  min-width: 48px;
}

/* Focus management for modals and overlays */
.focus-trap {
  position: relative;
}

.focus-trap:focus-within {
  outline: none;
}

/* Keyboard navigation indicators */
.keyboard-navigation .focusable:focus {
  outline: 2px solid #000;
  outline-offset: 2px;
}

/* Live regions for screen reader announcements */
.live-region {
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* Error and validation states */
.error-state {
  border-color: #000 !important;
  background-color: #fafafa;
}

.error-message {
  color: #000;
  font-size: 0.875rem;
  margin-top: 0.25rem;
}

.error-icon {
  color: #000;
  margin-right: 0.25rem;
}

/* Loading states */
.loading-spinner {
  animation: spin 1s linear infinite;
}

@media (prefers-reduced-motion: reduce) {
  .loading-spinner {
    animation: none;
  }

  .loading-spinner::after {
    content: 'Loading...';
    position: absolute;
    left: -9999px;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Responsive text sizing for better readability */
@media (max-width: 640px) {
  .responsive-text {
    font-size: 16px; /* Prevent zoom on iOS */
  }
}

/* Dark mode support (for future implementation) */
@media (prefers-color-scheme: dark) {
  .dark-mode-support {
    /* Will be implemented when dark mode is added */
  }
}

/* Print styles for accessibility */
@media print {
  .no-print {
    display: none !important;
  }

  .print-only {
    display: block !important;
  }

  /* Ensure good contrast in print */
  * {
    background: white !important;
    color: black !important;
  }

  a[href]:after {
    content: ' (' attr(href) ')';
  }
}

/* Windows High Contrast Mode */
@media screen and (-ms-high-contrast: active) {
  .button {
    border: 2px solid ButtonText;
  }

  .input {
    border: 2px solid ButtonText;
  }

  .focus-indicator {
    outline: 2px solid Highlight;
  }
}

/* Forced colors mode (newer browsers) */
@media (forced-colors: active) {
  .button {
    border: 2px solid ButtonText;
    background-color: ButtonFace;
    color: ButtonText;
  }

  .button:hover,
  .button:focus {
    background-color: Highlight;
    color: HighlightText;
    border-color: HighlightText;
  }

  .input {
    border: 2px solid ButtonText;
    background-color: Field;
    color: FieldText;
  }

  .input:focus {
    outline: 2px solid Highlight;
  }
}

/* Utility classes for common accessibility patterns */
.visually-hidden {
  @apply sr-only;
}

.focus-ring {
  @apply focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2;
}

.focus-ring-inset {
  @apply focus:outline-none focus:ring-2 focus:ring-inset focus:ring-gray-400;
}

.touch-friendly {
  @apply min-h-touch min-w-touch;
}

.keyboard-focusable {
  @apply focus:outline-none focus:ring-2 focus:ring-gray-400;
}

/* Animation utilities with reduced motion support */
.animate-fade-in {
  animation: fadeIn 0.2s ease-in-out;
}

.animate-slide-up {
  animation: slideUp 0.3s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.2s ease-out;
}

@media (prefers-reduced-motion: reduce) {
  .animate-fade-in {
    animation: fadeInReduced 0.1s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUpReduced 0.1s ease-out;
  }

  .animate-scale-in {
    animation: none;
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInReduced {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideUpReduced {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
